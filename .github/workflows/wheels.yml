name: Build and upload to PyPI

on:
  workflow_dispatch:
  pull_request:
  push:
    branches:
      - main
  release:
    types:
      - published

jobs:
  build_wheels:
    name: Build wheels for ${{ matrix.os }}
    runs-on: ${{ matrix.runs-on }}
    strategy:
      matrix:
        os: [ linux-intel, linux-arm, windows, macOS-intel, macOS-arm, iOS ]
        include:
          - archs: auto64
            platform: auto
          - os: linux-intel
            runs-on: ubuntu-latest
          - os: linux-arm
            runs-on: ubuntu-24.04-arm
          - os: windows
            runs-on: windows-latest
          - os: macos-intel
            runs-on: macos-13  # last x86_64 runner
          - os: macos-arm
            runs-on: macOS-latest  # ARM64 runner
            archs: x86_64
          - os: ios
            runs-on: macOS-latest
            platform: ios

    steps:
      - uses: actions/checkout@v4

      - name: Build wheels
        uses: pypa/cibuildwheel@v3.0.0b1
        env:
          CIBW_PLATFORM: ${{ matrix.platform }}
          CIBW_ARCHS: ${{ matrix.archs }}
          CIBW_MANYLINUX_I686_IMAGE: manylinux2014

      - name: List built wheels (debug)
        run: ls -l ./wheelhouse

      - name: Install and test
        if: ${{ matrix.os != 'ios' }}
        run: |
          python -m pip install --upgrade pip
          # Install the wheel compatible with this runner
          if [[ $(uname -m) == "x86_64" ]]; then
            python -m pip install ./wheelhouse/*x86_64*.whl
          else
            python -m pip install ./wheelhouse/*arm64*.whl 
          fi
          python -m unittest discover -s ./tests -p "*.py"

      - uses: actions/upload-artifact@v4
        with:
          name: cibw-wheels-${{ matrix.os }}-${{ strategy.job-index }}
          path: ./wheelhouse/*.whl

  build_sdist:
    name: Build source distribution
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Build sdist
        run: pipx run build --sdist

      - name: Test sdist
        run: |
          python -m pip install --upgrade pip
          python -m pip install dist/*.tar.gz
          python -m unittest discover -s ./tests -p "*.py"

      - uses: actions/upload-artifact@v4
        with:
          name: cibw-sdist
          path: dist/*.tar.gz

  upload_pypi:
    needs: [build_wheels, build_sdist]
    runs-on: ubuntu-latest
    environment: PyPI
    permissions:
      id-token: write
    if: github.event_name == 'release' && github.event.action == 'published'
    steps:
      - uses: actions/download-artifact@v4
        with:
          pattern: cibw-*
          path: dist
          merge-multiple: true

      - uses: pypa/gh-action-pypi-publish@release/v1
        with:
          repository-url: https://test.pypi.org/legacy/
          username: __token__
          password: ${{ secrets.TEST_PYPI_API_TOKEN }}
          skip-existing: true
